*************************************
* Module 4: Setup User Registration *
*************************************
AWS Services:
-AWS Cognito: User Pool
-Amazon API Gateway: Validate registered users to use functions

Learning:

1) Add A User Pool For Website Users
A: Create The Cognito User Pool
example: aws cognito-idp create-user-pool --pool-name MysfitsUserPool --auto-verified-attributes email

B: Create A Cognito User Pool Client
Integrate frontend website with Cognito vi User Pool Client for User Pool
example: aws cognito-idp create-user-pool-client --user-pool-id REPLACE_ME --client-name MysfitsUserPoolClient
aws cognito-idp create-user-pool-client --user-pool-id us-east-2_gbNYZLT2j --client-name MysfitsUserPoolClient

2) Add A New REST API With Amazon API Gateway
A: Create An API Gateway VPC Link
Create a new RESTful API in front of existing Flask service to perform request authorization before our NLB
receives requests.  In order for API Gateway to privately integrate with NLB, configure an API Gateway VPC
Link that enables API Gateway APIs to directly integrate with backend web services on privately hosted VPC.
***Currently, NLB is public facing, usually would be private, knowing Amazon API Gateway will be public.
example: aws apigateway create-vpc-link --name MysfitsApiVpcLink --target-arns REPLACE_ME_NLB_ARN > ~/environment/api-gateway-link-output.json
aws apigateway create-vpc-link --name MysfitsApiVpcLink --target-arns arn:aws:elasticloadbalancing:us-east-2:012391247423:loadbalancer/net/mysfits-nlb/f44913822a90afbd > ~/environment/api-gateway-link-output.json

B: Create The REST API Using Swagger
-Open-source framework for describing APIs via JSON
Edit: ~/environment/aws-modern-applicaiton-workshop/module-4/aws-cli/api-swagger.json
example: aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body file://~/environment/aws-modern-application-workshop/module-4/aws-cli/api-swagger.json --fail-on-warnings

C: Deploy The API
example: aws apigateway create-deployment --rest-api-id REPLACE_ME_WITH_API_ID --stage-name prod
aws apigateway create-deployment --rest-api-id 1evyjmoibf --stage-name prod
API Location: https://REPLACE_ME_WITH_API_ID.execute-api.REPLACE_ME_WITH_REGION.amazonaws.com/prod
https://1evyjmoibf.execute-api.us-east-2.amazonaws.com/prod
--https://1evyjmoibf.execute-api.us-east-2.amazonaws.com/prod/mysfits

3) Update the Mythical Mysfits Website
A: Update the Flask Service Backend
example:
cd ~/environment/MythicalMysfitsService-Repository/
cp -r ~/environment/aws-modern-application-workshop/module-4/app/* .
git add .
git commit -m "Update service code backend to enable additional website features."
git push

B: Update The Mythical Mysfits Website In S3
edit: ~/environment/aws-modern-application-workshop/module-4/app/web/index.html , confirm.html & register.html
example: aws s3 cp --recursive ~/environment/aws-modern-application-workshop/module-4/web/ s3://YOUR-S3-BUCKET/
aws s3 cp --recursive ~/environment/aws-modern-application-workshop/module-4/web/ s3://mmysfits/
